<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OidcClientDemo.WPF"
        xmlns:uc="clr-namespace:OidcClientDemo.WPF.UserControls" x:Class="OidcClientDemo.WPF.MainWindow"
        mc:Ignorable="d"
        SizeToContent="Height"
        ResizeMode="NoResize"
        DataContext="{Binding Main, Mode=OneWay, Source={StaticResource Locator}}"
        Title="WPF OIDC Client Demo v1.0" Height="681.667" Width="439.333" Left="672" Top="140" Style="{DynamicResource DefaultWindowStyle}" FontSize="13">
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding Open}"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveAs}"/>
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" Height="20">
            <MenuItem Header="File">
                <MenuItem Header="Open" Command="{Binding Open}"/>
                <MenuItem Header="Save As..." Command="{Binding SaveAs}"/>
            </MenuItem>
        </Menu>
        <StackPanel Margin="12">
            <Label Content="Authority"/>
            <TextBox Text="{Binding Authority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsBusy, Mode=OneWay}"/>
            <Label Content="Client ID"/>
            <TextBox Text="{Binding ClientId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsBusy, Mode=OneWay}"/>
            <Label Content="Client Secret"/>
            <TextBox Text="{Binding ClientSecret, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsBusy, Mode=OneWay}"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Grid.Column="0" Content="Scopes"/>
                <Label Grid.Row="0" Grid.Column="1" Content="Listen Port"/>
                <TextBox Grid.Row="1" Grid.Column="0" Margin="0,0,8,0" Text="{Binding Scopes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsBusy, Mode=OneWay}"/>
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding ListenPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsBusy, Mode=OneWay}"/>
            </Grid>
            <Label Content="Response Type"/>
            <TextBox Text="{Binding ResponseType}" IsReadOnly="{Binding IsBusy, Mode=OneWay}"/>
            <Label Content="Redirect URL"/>
            <TextBox Text="{Binding RedirectUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsBusy, Mode=OneWay}"/>
            <UniformGrid Columns="2" Rows="1">
                <Button Content="1. Get Authorization Code" Margin="0,8,4,0" Command="{Binding StartCodeFlow, Mode=OneWay}"/>
                <Button Content="Abort" Margin="4,8,0,0" Command="{Binding Abort, Mode=OneWay}"/>
            </UniformGrid>
            <Label Content="Authorization Code"/>
            <TextBox Text="{Binding AuthorizationCode}" IsReadOnly="{Binding IsBusy, Mode=OneWay}"/>
            <Button Content="2. Get Tokens using Authorization Code" Command="{Binding ExchangeCodeForTokens, Mode=OneWay}"/>
            <uc:TokenViewer BorderThickness="1" GridThickness="0.8" GridBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" TokenType="{Binding TokenType}" AccessToken="{Binding AccessToken}" IdToken="{Binding IdToken}" ExpiresIn="{Binding ExpiresIn, Mode=OneWay}"/>
            <Label Content="Refresh Token"/>
            <TextBox Text="{Binding RefreshToken}" IsReadOnly="{Binding IsBusy, Mode=OneWay}"/>
            <Button Command="{Binding RefreshTheToken, Mode=OneWay}">3. Get Tokens using Refresh Token</Button>
        </StackPanel>
    </DockPanel>
</Window>
